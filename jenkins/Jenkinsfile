pipeline {
    agent any
    options {
        skipDefaultCheckout(true)
        buildDiscarder(logRotator(numToKeepStr: '2'))
    }
    environment {
        GITHUB_CREDS = credentials('jenkins-upa-test')
        DOCKERHUB_CREDS = credentials('my-docker-reg-upa')
    }

    stages {

        stage('Init environment') {
            steps {
                cleanWs()
                checkout scm
            }
        }

        // stage('Code QA') {
        //     steps {
        //         //sh'''
        //         //git config --global --add safe.directory $(pwd)
        //         //git init .
        //         //'''
        //         echo 'Setting up virtual env'
        //         sh'''
        //         #chown -R 1000 $(pwd)
        //         python3 -m venv venv
        //         . venv/bin/activate
        //         git config --unset-all core.hooksPath
        //         pip install --upgrade pip && pip install pre-commit
        //         pre-commit install
        //         pre-commit run --files src/projects/mic/**/* --show-diff-on-failure
        //         # pre-commit run --from-ref origin/HEAD --to-ref HEAD
        //         '''
        //     }
        // }

        stage('Cloning dependencies') {
            steps {
                withCredentials([gitUsernamePassword(credentialsId: 'jenkins-upa-test', gitToolName: 'git-tool')]) {
                    sh './jenkins/clone_dependencies.sh'
                }
            }
        }

        stage('Uni Tests') {
            steps {
                echo 'Build image'
                sh './jenkins/build_image.sh'
                echo 'Start container'
                sh './jenkins/start_container.sh'
                echo 'Run tests'
                sh './jenkins/run_tests.sh'
            }

        }

    }
}